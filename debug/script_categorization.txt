MUSIC LEAGUE PYTHON SCRIPT CATEGORIZATION
==========================================

CORE USER WORKFLOWS (KEEP):
---------------------------
âœ… login.py - User authentication to Music League
âœ… scraper.py - Main data collection from Music League
âœ… scout.py - Song recommendation engine (main product)
âœ… reports.py - Generate reports from collected data
âœ… setup_db.py - Database initialization
âœ… config.py - Configuration management

SETUP & VALIDATION (KEEP):
--------------------------
âœ… setup_anthropic.py - Configure Anthropic API
âœ… setup_spotify.py - Configure Spotify API  
âœ… validate_anthropic.py - Test Anthropic API
âœ… validate_spotify.py - Test Spotify API
âœ… validate_full_system.py - End-to-end system test

CORE LIBRARIES (KEEP):
----------------------
âœ… forecasting.py - Core prediction engine
âœ… voter_preferences.py - Voter modeling system
âœ… historical_patterns.py - Historical analysis
âœ… preference_forecaster.py - Group preference prediction
âœ… audio_features_fallback.py - Spotify fallback system

USEFUL UTILITIES (KEEP):
------------------------
âœ… predict_theme_template.py - Template for predictions
âœ… monitor.py - System monitoring

DEBUG/DEVELOPMENT SCRIPTS (MOVE TO debug/):
-------------------------------------------
ðŸ”„ debug_comments.py - Debug comment parsing
ðŸ”„ debug_page.py - Debug page scraping
ðŸ”„ debug_round.py - Debug round parsing
ðŸ”„ debug_rounds.py - Debug rounds parsing
ðŸ”„ debug_spotify.py - Debug Spotify API
ðŸ”„ debug_spotify_permissions.py - Debug Spotify permissions
ðŸ”„ debug_spotipy_url.py - Debug Spotipy URL issues
ðŸ”„ debug_submitters.py - Debug submitter parsing
ðŸ”„ debug_theme_analysis.py - Debug theme analysis
ðŸ”„ debug_vote_parsing.py - Debug vote parsing
ðŸ”„ debug_voter_similarity.py - Debug voter similarity
ðŸ”„ debug_votes.py - Debug vote processing
ðŸ”„ debug_vote_structure.py - Debug vote structure

ANALYSIS/RESEARCH SCRIPTS (MOVE TO debug/):
-------------------------------------------
ðŸ”„ analyze_bt26_voters.py - One-time BT26 analysis
ðŸ”„ analyze_voter_patterns.py - One-time voter analysis
ðŸ”„ corrected_bt26_analysis.py - Corrected BT26 analysis
ðŸ”„ demo_voter_preferences.py - Demo script
ðŸ”„ generate_similarity_data.py - Generate similarity data
ðŸ”„ recent_leagues_analysis.py - Recent leagues analysis

TEST SCRIPTS (MOVE TO debug/):
------------------------------
ðŸ”„ test_improved_semantic_analysis.py - Test semantic analysis
ðŸ”„ test_mainstream_filter.py - Test mainstream filtering
ðŸ”„ test_vote_parsing.py - Test vote parsing

ONE-OFF SCRIPTS (MOVE TO debug/):
---------------------------------
ðŸ”„ add_spotify_creds.py - One-time credential setup
ðŸ”„ predict_food_theme.py - Specific food theme prediction
ðŸ”„ run.py - Generic runner script

SUMMARY:
--------
âœ… KEEP (16): Core user workflows, setup/validation, libraries
ðŸ”„ MOVE TO debug/ (27): Debug, test, analysis, one-off scripts

This reduces root directory from 43 to 16 scripts (63% reduction)